PART
{
name = SOJ-RERA
module = Part
author = hraban

// --- asset parameters ---
MODEL
{
   model = Contares_RUS/Parts/SOJUS/SOJ-RERA
}
	rescaleFactor = 1.0
	scale = 1.0
	node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0

	sound_vent_medium = engage
	sound_rocket_mini = running
	sound_vent_soft = disengage
	TechRequired = advRocketry

	entryCost = 200
	cost = 34
	category = Engine
	subcategory = 0
	title 			= #LOC_CSA-RUS_SOJ-RERA_Title
	manufacturer 	= #LOC_CSA-RUS_Agency_Title
	description 	= #LOC_CSA-RUS_SOJ-RERA_Desc
	tags = contares union sojus soyuz khi 
	attachRules = 0,1,0,0,0
	mass = 0.003
	heatConductivity = 0.04 
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.5 
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 10
	maxTemp = 3600
	ActivatesEvenIfDisconnected = true
	stagingIcon = SOLID_BOOSTER
	bulkheadProfiles = srf
	
		tags = contares srb separator union sojus soyuz
		
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		CSA_LES
		throttleLocked = True
		exhaustDamage = True
		allowShutdown = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 8
		heatProduction = 550
		fxOffset = 0, 0, 0.02
		EngineType = SolidBooster
		PROPELLANT
		{
			name = SolidFuel
			ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 154
			key = 1 118
			key = 6 0.001
		}
		exhaustDamageMultiplier = 200
	}
	RESOURCE
	{
		name = SolidFuel
		amount = 0.5
		maxAmount = 0.5
	}
//	MODULE
//	{
//		name = Landertron
//		electricRate = 0.05
//		refuelable = true
//		animationName = deploy_RERA
//		stagingEnabled = true
//	}
	
MODULE
{
	name = ModuleWaterfallFX
	moduleID = CSA_LES_FX
	version = FixedRampRates
	ATMOSPHEREDENSITYCONTROLLER
	{
		name = atmosphereDepth
	}
	THROTTLECONTROLLER
	{
		responseRateUp = 4000
		responseRateDown = 4000
		engineID = CSA_LES
		name = throttle
	}
	RANDOMNESSCONTROLLER
	{
		range = 0,1
		noiseType = random
		scale = 1
		minimum = 0
		speed = 1
		name = random
	}
	RANDOMNESSCONTROLLER
	{
		range = 0,0
		noiseType = perlin
		scale = 0.5
		minimum = -0.5
		speed = 10
		name = Random2
		seed = 40
	}
	TEMPLATE
	{
		templateName = CSA_LES_LOW
		overrideParentTransform = thrustTransform
		position = 0,0,0
		rotation = 0,0,0
		scale = 0.125,0.125,0.122
	}
}
	
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 60
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Trivial
		}
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 900
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
